#ifndef N10M100_4_DATA_H
#define N10M100_4_DATA_H
#include "../../include/qp.h"


/* function prototypes */
qpData * generate_problem();
void clean_problem(qpData * data);


/* function to generate QP problem data */
qpData * generate_problem(){

qpData * data = (qpData *)malloc(sizeof(qpData));

// Problem dimensions
data->n = 110;
data->m = 200;

// Problem vectors
data->l = (float*) malloc(200 * sizeof(float));
data->l[0] = -qpINFTY;
data->l[1] = -qpINFTY;
data->l[2] = -qpINFTY;
data->l[3] = -qpINFTY;
data->l[4] = -qpINFTY;
data->l[5] = -qpINFTY;
data->l[6] = -qpINFTY;
data->l[7] = -qpINFTY;
data->l[8] = -qpINFTY;
data->l[9] = -qpINFTY;
data->l[10] = -qpINFTY;
data->l[11] = -qpINFTY;
data->l[12] = -qpINFTY;
data->l[13] = -qpINFTY;
data->l[14] = -qpINFTY;
data->l[15] = -qpINFTY;
data->l[16] = -qpINFTY;
data->l[17] = -qpINFTY;
data->l[18] = -qpINFTY;
data->l[19] = -qpINFTY;
data->l[20] = -qpINFTY;
data->l[21] = -qpINFTY;
data->l[22] = -qpINFTY;
data->l[23] = -qpINFTY;
data->l[24] = -qpINFTY;
data->l[25] = -qpINFTY;
data->l[26] = -qpINFTY;
data->l[27] = -qpINFTY;
data->l[28] = -qpINFTY;
data->l[29] = -qpINFTY;
data->l[30] = -qpINFTY;
data->l[31] = -qpINFTY;
data->l[32] = -qpINFTY;
data->l[33] = -qpINFTY;
data->l[34] = -qpINFTY;
data->l[35] = -qpINFTY;
data->l[36] = -qpINFTY;
data->l[37] = -qpINFTY;
data->l[38] = -qpINFTY;
data->l[39] = -qpINFTY;
data->l[40] = -qpINFTY;
data->l[41] = -qpINFTY;
data->l[42] = -qpINFTY;
data->l[43] = -qpINFTY;
data->l[44] = -qpINFTY;
data->l[45] = -qpINFTY;
data->l[46] = -qpINFTY;
data->l[47] = -qpINFTY;
data->l[48] = -qpINFTY;
data->l[49] = -qpINFTY;
data->l[50] = -qpINFTY;
data->l[51] = -qpINFTY;
data->l[52] = -qpINFTY;
data->l[53] = -qpINFTY;
data->l[54] = -qpINFTY;
data->l[55] = -qpINFTY;
data->l[56] = -qpINFTY;
data->l[57] = -qpINFTY;
data->l[58] = -qpINFTY;
data->l[59] = -qpINFTY;
data->l[60] = -qpINFTY;
data->l[61] = -qpINFTY;
data->l[62] = -qpINFTY;
data->l[63] = -qpINFTY;
data->l[64] = -qpINFTY;
data->l[65] = -qpINFTY;
data->l[66] = -qpINFTY;
data->l[67] = -qpINFTY;
data->l[68] = -qpINFTY;
data->l[69] = -qpINFTY;
data->l[70] = -qpINFTY;
data->l[71] = -qpINFTY;
data->l[72] = -qpINFTY;
data->l[73] = -qpINFTY;
data->l[74] = -qpINFTY;
data->l[75] = -qpINFTY;
data->l[76] = -qpINFTY;
data->l[77] = -qpINFTY;
data->l[78] = -qpINFTY;
data->l[79] = -qpINFTY;
data->l[80] = -qpINFTY;
data->l[81] = -qpINFTY;
data->l[82] = -qpINFTY;
data->l[83] = -qpINFTY;
data->l[84] = -qpINFTY;
data->l[85] = -qpINFTY;
data->l[86] = -qpINFTY;
data->l[87] = -qpINFTY;
data->l[88] = -qpINFTY;
data->l[89] = -qpINFTY;
data->l[90] = -qpINFTY;
data->l[91] = -qpINFTY;
data->l[92] = -qpINFTY;
data->l[93] = -qpINFTY;
data->l[94] = -qpINFTY;
data->l[95] = -qpINFTY;
data->l[96] = -qpINFTY;
data->l[97] = -qpINFTY;
data->l[98] = -qpINFTY;
data->l[99] = -qpINFTY;
data->l[100] = 0.00000000000000000000;
data->l[101] = 0.00000000000000000000;
data->l[102] = 0.00000000000000000000;
data->l[103] = 0.00000000000000000000;
data->l[104] = 0.00000000000000000000;
data->l[105] = 0.00000000000000000000;
data->l[106] = 0.00000000000000000000;
data->l[107] = 0.00000000000000000000;
data->l[108] = 0.00000000000000000000;
data->l[109] = 0.00000000000000000000;
data->l[110] = 0.00000000000000000000;
data->l[111] = 0.00000000000000000000;
data->l[112] = 0.00000000000000000000;
data->l[113] = 0.00000000000000000000;
data->l[114] = 0.00000000000000000000;
data->l[115] = 0.00000000000000000000;
data->l[116] = 0.00000000000000000000;
data->l[117] = 0.00000000000000000000;
data->l[118] = 0.00000000000000000000;
data->l[119] = 0.00000000000000000000;
data->l[120] = 0.00000000000000000000;
data->l[121] = 0.00000000000000000000;
data->l[122] = 0.00000000000000000000;
data->l[123] = 0.00000000000000000000;
data->l[124] = 0.00000000000000000000;
data->l[125] = 0.00000000000000000000;
data->l[126] = 0.00000000000000000000;
data->l[127] = 0.00000000000000000000;
data->l[128] = 0.00000000000000000000;
data->l[129] = 0.00000000000000000000;
data->l[130] = 0.00000000000000000000;
data->l[131] = 0.00000000000000000000;
data->l[132] = 0.00000000000000000000;
data->l[133] = 0.00000000000000000000;
data->l[134] = 0.00000000000000000000;
data->l[135] = 0.00000000000000000000;
data->l[136] = 0.00000000000000000000;
data->l[137] = 0.00000000000000000000;
data->l[138] = 0.00000000000000000000;
data->l[139] = 0.00000000000000000000;
data->l[140] = 0.00000000000000000000;
data->l[141] = 0.00000000000000000000;
data->l[142] = 0.00000000000000000000;
data->l[143] = 0.00000000000000000000;
data->l[144] = 0.00000000000000000000;
data->l[145] = 0.00000000000000000000;
data->l[146] = 0.00000000000000000000;
data->l[147] = 0.00000000000000000000;
data->l[148] = 0.00000000000000000000;
data->l[149] = 0.00000000000000000000;
data->l[150] = 0.00000000000000000000;
data->l[151] = 0.00000000000000000000;
data->l[152] = 0.00000000000000000000;
data->l[153] = 0.00000000000000000000;
data->l[154] = 0.00000000000000000000;
data->l[155] = 0.00000000000000000000;
data->l[156] = 0.00000000000000000000;
data->l[157] = 0.00000000000000000000;
data->l[158] = 0.00000000000000000000;
data->l[159] = 0.00000000000000000000;
data->l[160] = 0.00000000000000000000;
data->l[161] = 0.00000000000000000000;
data->l[162] = 0.00000000000000000000;
data->l[163] = 0.00000000000000000000;
data->l[164] = 0.00000000000000000000;
data->l[165] = 0.00000000000000000000;
data->l[166] = 0.00000000000000000000;
data->l[167] = 0.00000000000000000000;
data->l[168] = 0.00000000000000000000;
data->l[169] = 0.00000000000000000000;
data->l[170] = 0.00000000000000000000;
data->l[171] = 0.00000000000000000000;
data->l[172] = 0.00000000000000000000;
data->l[173] = 0.00000000000000000000;
data->l[174] = 0.00000000000000000000;
data->l[175] = 0.00000000000000000000;
data->l[176] = 0.00000000000000000000;
data->l[177] = 0.00000000000000000000;
data->l[178] = 0.00000000000000000000;
data->l[179] = 0.00000000000000000000;
data->l[180] = 0.00000000000000000000;
data->l[181] = 0.00000000000000000000;
data->l[182] = 0.00000000000000000000;
data->l[183] = 0.00000000000000000000;
data->l[184] = 0.00000000000000000000;
data->l[185] = 0.00000000000000000000;
data->l[186] = 0.00000000000000000000;
data->l[187] = 0.00000000000000000000;
data->l[188] = 0.00000000000000000000;
data->l[189] = 0.00000000000000000000;
data->l[190] = 0.00000000000000000000;
data->l[191] = 0.00000000000000000000;
data->l[192] = 0.00000000000000000000;
data->l[193] = 0.00000000000000000000;
data->l[194] = 0.00000000000000000000;
data->l[195] = 0.00000000000000000000;
data->l[196] = 0.00000000000000000000;
data->l[197] = 0.00000000000000000000;
data->l[198] = 0.00000000000000000000;
data->l[199] = 0.00000000000000000000;
data->u = (float*) malloc(200 * sizeof(float));
data->u[0] = -1.00000000000000000000;
data->u[1] = -1.00000000000000000000;
data->u[2] = -1.00000000000000000000;
data->u[3] = -1.00000000000000000000;
data->u[4] = -1.00000000000000000000;
data->u[5] = -1.00000000000000000000;
data->u[6] = -1.00000000000000000000;
data->u[7] = -1.00000000000000000000;
data->u[8] = -1.00000000000000000000;
data->u[9] = -1.00000000000000000000;
data->u[10] = -1.00000000000000000000;
data->u[11] = -1.00000000000000000000;
data->u[12] = -1.00000000000000000000;
data->u[13] = -1.00000000000000000000;
data->u[14] = -1.00000000000000000000;
data->u[15] = -1.00000000000000000000;
data->u[16] = -1.00000000000000000000;
data->u[17] = -1.00000000000000000000;
data->u[18] = -1.00000000000000000000;
data->u[19] = -1.00000000000000000000;
data->u[20] = -1.00000000000000000000;
data->u[21] = -1.00000000000000000000;
data->u[22] = -1.00000000000000000000;
data->u[23] = -1.00000000000000000000;
data->u[24] = -1.00000000000000000000;
data->u[25] = -1.00000000000000000000;
data->u[26] = -1.00000000000000000000;
data->u[27] = -1.00000000000000000000;
data->u[28] = -1.00000000000000000000;
data->u[29] = -1.00000000000000000000;
data->u[30] = -1.00000000000000000000;
data->u[31] = -1.00000000000000000000;
data->u[32] = -1.00000000000000000000;
data->u[33] = -1.00000000000000000000;
data->u[34] = -1.00000000000000000000;
data->u[35] = -1.00000000000000000000;
data->u[36] = -1.00000000000000000000;
data->u[37] = -1.00000000000000000000;
data->u[38] = -1.00000000000000000000;
data->u[39] = -1.00000000000000000000;
data->u[40] = -1.00000000000000000000;
data->u[41] = -1.00000000000000000000;
data->u[42] = -1.00000000000000000000;
data->u[43] = -1.00000000000000000000;
data->u[44] = -1.00000000000000000000;
data->u[45] = -1.00000000000000000000;
data->u[46] = -1.00000000000000000000;
data->u[47] = -1.00000000000000000000;
data->u[48] = -1.00000000000000000000;
data->u[49] = -1.00000000000000000000;
data->u[50] = -1.00000000000000000000;
data->u[51] = -1.00000000000000000000;
data->u[52] = -1.00000000000000000000;
data->u[53] = -1.00000000000000000000;
data->u[54] = -1.00000000000000000000;
data->u[55] = -1.00000000000000000000;
data->u[56] = -1.00000000000000000000;
data->u[57] = -1.00000000000000000000;
data->u[58] = -1.00000000000000000000;
data->u[59] = -1.00000000000000000000;
data->u[60] = -1.00000000000000000000;
data->u[61] = -1.00000000000000000000;
data->u[62] = -1.00000000000000000000;
data->u[63] = -1.00000000000000000000;
data->u[64] = -1.00000000000000000000;
data->u[65] = -1.00000000000000000000;
data->u[66] = -1.00000000000000000000;
data->u[67] = -1.00000000000000000000;
data->u[68] = -1.00000000000000000000;
data->u[69] = -1.00000000000000000000;
data->u[70] = -1.00000000000000000000;
data->u[71] = -1.00000000000000000000;
data->u[72] = -1.00000000000000000000;
data->u[73] = -1.00000000000000000000;
data->u[74] = -1.00000000000000000000;
data->u[75] = -1.00000000000000000000;
data->u[76] = -1.00000000000000000000;
data->u[77] = -1.00000000000000000000;
data->u[78] = -1.00000000000000000000;
data->u[79] = -1.00000000000000000000;
data->u[80] = -1.00000000000000000000;
data->u[81] = -1.00000000000000000000;
data->u[82] = -1.00000000000000000000;
data->u[83] = -1.00000000000000000000;
data->u[84] = -1.00000000000000000000;
data->u[85] = -1.00000000000000000000;
data->u[86] = -1.00000000000000000000;
data->u[87] = -1.00000000000000000000;
data->u[88] = -1.00000000000000000000;
data->u[89] = -1.00000000000000000000;
data->u[90] = -1.00000000000000000000;
data->u[91] = -1.00000000000000000000;
data->u[92] = -1.00000000000000000000;
data->u[93] = -1.00000000000000000000;
data->u[94] = -1.00000000000000000000;
data->u[95] = -1.00000000000000000000;
data->u[96] = -1.00000000000000000000;
data->u[97] = -1.00000000000000000000;
data->u[98] = -1.00000000000000000000;
data->u[99] = -1.00000000000000000000;
data->u[100] = qpINFTY;
data->u[101] = qpINFTY;
data->u[102] = qpINFTY;
data->u[103] = qpINFTY;
data->u[104] = qpINFTY;
data->u[105] = qpINFTY;
data->u[106] = qpINFTY;
data->u[107] = qpINFTY;
data->u[108] = qpINFTY;
data->u[109] = qpINFTY;
data->u[110] = qpINFTY;
data->u[111] = qpINFTY;
data->u[112] = qpINFTY;
data->u[113] = qpINFTY;
data->u[114] = qpINFTY;
data->u[115] = qpINFTY;
data->u[116] = qpINFTY;
data->u[117] = qpINFTY;
data->u[118] = qpINFTY;
data->u[119] = qpINFTY;
data->u[120] = qpINFTY;
data->u[121] = qpINFTY;
data->u[122] = qpINFTY;
data->u[123] = qpINFTY;
data->u[124] = qpINFTY;
data->u[125] = qpINFTY;
data->u[126] = qpINFTY;
data->u[127] = qpINFTY;
data->u[128] = qpINFTY;
data->u[129] = qpINFTY;
data->u[130] = qpINFTY;
data->u[131] = qpINFTY;
data->u[132] = qpINFTY;
data->u[133] = qpINFTY;
data->u[134] = qpINFTY;
data->u[135] = qpINFTY;
data->u[136] = qpINFTY;
data->u[137] = qpINFTY;
data->u[138] = qpINFTY;
data->u[139] = qpINFTY;
data->u[140] = qpINFTY;
data->u[141] = qpINFTY;
data->u[142] = qpINFTY;
data->u[143] = qpINFTY;
data->u[144] = qpINFTY;
data->u[145] = qpINFTY;
data->u[146] = qpINFTY;
data->u[147] = qpINFTY;
data->u[148] = qpINFTY;
data->u[149] = qpINFTY;
data->u[150] = qpINFTY;
data->u[151] = qpINFTY;
data->u[152] = qpINFTY;
data->u[153] = qpINFTY;
data->u[154] = qpINFTY;
data->u[155] = qpINFTY;
data->u[156] = qpINFTY;
data->u[157] = qpINFTY;
data->u[158] = qpINFTY;
data->u[159] = qpINFTY;
data->u[160] = qpINFTY;
data->u[161] = qpINFTY;
data->u[162] = qpINFTY;
data->u[163] = qpINFTY;
data->u[164] = qpINFTY;
data->u[165] = qpINFTY;
data->u[166] = qpINFTY;
data->u[167] = qpINFTY;
data->u[168] = qpINFTY;
data->u[169] = qpINFTY;
data->u[170] = qpINFTY;
data->u[171] = qpINFTY;
data->u[172] = qpINFTY;
data->u[173] = qpINFTY;
data->u[174] = qpINFTY;
data->u[175] = qpINFTY;
data->u[176] = qpINFTY;
data->u[177] = qpINFTY;
data->u[178] = qpINFTY;
data->u[179] = qpINFTY;
data->u[180] = qpINFTY;
data->u[181] = qpINFTY;
data->u[182] = qpINFTY;
data->u[183] = qpINFTY;
data->u[184] = qpINFTY;
data->u[185] = qpINFTY;
data->u[186] = qpINFTY;
data->u[187] = qpINFTY;
data->u[188] = qpINFTY;
data->u[189] = qpINFTY;
data->u[190] = qpINFTY;
data->u[191] = qpINFTY;
data->u[192] = qpINFTY;
data->u[193] = qpINFTY;
data->u[194] = qpINFTY;
data->u[195] = qpINFTY;
data->u[196] = qpINFTY;
data->u[197] = qpINFTY;
data->u[198] = qpINFTY;
data->u[199] = qpINFTY;
data->q = (float*) malloc(110 * sizeof(float));
data->q[0] = 0.00000000000000000000;
data->q[1] = 0.00000000000000000000;
data->q[2] = 0.00000000000000000000;
data->q[3] = 0.00000000000000000000;
data->q[4] = 0.00000000000000000000;
data->q[5] = 0.00000000000000000000;
data->q[6] = 0.00000000000000000000;
data->q[7] = 0.00000000000000000000;
data->q[8] = 0.00000000000000000000;
data->q[9] = 0.00000000000000000000;
data->q[10] = 1.00000000000000000000;
data->q[11] = 1.00000000000000000000;
data->q[12] = 1.00000000000000000000;
data->q[13] = 1.00000000000000000000;
data->q[14] = 1.00000000000000000000;
data->q[15] = 1.00000000000000000000;
data->q[16] = 1.00000000000000000000;
data->q[17] = 1.00000000000000000000;
data->q[18] = 1.00000000000000000000;
data->q[19] = 1.00000000000000000000;
data->q[20] = 1.00000000000000000000;
data->q[21] = 1.00000000000000000000;
data->q[22] = 1.00000000000000000000;
data->q[23] = 1.00000000000000000000;
data->q[24] = 1.00000000000000000000;
data->q[25] = 1.00000000000000000000;
data->q[26] = 1.00000000000000000000;
data->q[27] = 1.00000000000000000000;
data->q[28] = 1.00000000000000000000;
data->q[29] = 1.00000000000000000000;
data->q[30] = 1.00000000000000000000;
data->q[31] = 1.00000000000000000000;
data->q[32] = 1.00000000000000000000;
data->q[33] = 1.00000000000000000000;
data->q[34] = 1.00000000000000000000;
data->q[35] = 1.00000000000000000000;
data->q[36] = 1.00000000000000000000;
data->q[37] = 1.00000000000000000000;
data->q[38] = 1.00000000000000000000;
data->q[39] = 1.00000000000000000000;
data->q[40] = 1.00000000000000000000;
data->q[41] = 1.00000000000000000000;
data->q[42] = 1.00000000000000000000;
data->q[43] = 1.00000000000000000000;
data->q[44] = 1.00000000000000000000;
data->q[45] = 1.00000000000000000000;
data->q[46] = 1.00000000000000000000;
data->q[47] = 1.00000000000000000000;
data->q[48] = 1.00000000000000000000;
data->q[49] = 1.00000000000000000000;
data->q[50] = 1.00000000000000000000;
data->q[51] = 1.00000000000000000000;
data->q[52] = 1.00000000000000000000;
data->q[53] = 1.00000000000000000000;
data->q[54] = 1.00000000000000000000;
data->q[55] = 1.00000000000000000000;
data->q[56] = 1.00000000000000000000;
data->q[57] = 1.00000000000000000000;
data->q[58] = 1.00000000000000000000;
data->q[59] = 1.00000000000000000000;
data->q[60] = 1.00000000000000000000;
data->q[61] = 1.00000000000000000000;
data->q[62] = 1.00000000000000000000;
data->q[63] = 1.00000000000000000000;
data->q[64] = 1.00000000000000000000;
data->q[65] = 1.00000000000000000000;
data->q[66] = 1.00000000000000000000;
data->q[67] = 1.00000000000000000000;
data->q[68] = 1.00000000000000000000;
data->q[69] = 1.00000000000000000000;
data->q[70] = 1.00000000000000000000;
data->q[71] = 1.00000000000000000000;
data->q[72] = 1.00000000000000000000;
data->q[73] = 1.00000000000000000000;
data->q[74] = 1.00000000000000000000;
data->q[75] = 1.00000000000000000000;
data->q[76] = 1.00000000000000000000;
data->q[77] = 1.00000000000000000000;
data->q[78] = 1.00000000000000000000;
data->q[79] = 1.00000000000000000000;
data->q[80] = 1.00000000000000000000;
data->q[81] = 1.00000000000000000000;
data->q[82] = 1.00000000000000000000;
data->q[83] = 1.00000000000000000000;
data->q[84] = 1.00000000000000000000;
data->q[85] = 1.00000000000000000000;
data->q[86] = 1.00000000000000000000;
data->q[87] = 1.00000000000000000000;
data->q[88] = 1.00000000000000000000;
data->q[89] = 1.00000000000000000000;
data->q[90] = 1.00000000000000000000;
data->q[91] = 1.00000000000000000000;
data->q[92] = 1.00000000000000000000;
data->q[93] = 1.00000000000000000000;
data->q[94] = 1.00000000000000000000;
data->q[95] = 1.00000000000000000000;
data->q[96] = 1.00000000000000000000;
data->q[97] = 1.00000000000000000000;
data->q[98] = 1.00000000000000000000;
data->q[99] = 1.00000000000000000000;
data->q[100] = 1.00000000000000000000;
data->q[101] = 1.00000000000000000000;
data->q[102] = 1.00000000000000000000;
data->q[103] = 1.00000000000000000000;
data->q[104] = 1.00000000000000000000;
data->q[105] = 1.00000000000000000000;
data->q[106] = 1.00000000000000000000;
data->q[107] = 1.00000000000000000000;
data->q[108] = 1.00000000000000000000;
data->q[109] = 1.00000000000000000000;


// Matrix A
//---------
data->A = (csc*) malloc(sizeof(csc));
data->A->m = 200;
data->A->n = 110;
data->A->nz = -1;
data->A->nzmax = 700;
data->A->x = (float*) malloc(700 * sizeof(float));
data->A->x[0] = 0.35541686055610000050;
data->A->x[1] = 0.25392156109739538739;
data->A->x[2] = 0.34905498272050244912;
data->A->x[3] = 0.11183575398268189027;
data->A->x[4] = 0.32070709663958973934;
data->A->x[5] = 0.31760141581012224510;
data->A->x[6] = 0.16194635206530627602;
data->A->x[7] = 0.38033575215721038276;
data->A->x[8] = 0.31810670003222218938;
data->A->x[9] = 0.28270829516921969216;
data->A->x[10] = 0.14187792700713222627;
data->A->x[11] = 0.36809473219855148862;
data->A->x[12] = 0.33831255860008369041;
data->A->x[13] = 0.11879944854105160823;
data->A->x[14] = 0.34622708303322591306;
data->A->x[15] = 0.30754529831979082743;
data->A->x[16] = 0.19921816290657640147;
data->A->x[17] = 0.26884486152204922771;
data->A->x[18] = 0.10340633912244143189;
data->A->x[19] = 0.30267203710790435700;
data->A->x[20] = 0.30482826914582361599;
data->A->x[21] = 0.41358853008188045663;
data->A->x[22] = 0.36641757462359825226;
data->A->x[23] = 0.22848470294267395064;
data->A->x[24] = -0.05377654357874805946;
data->A->x[25] = -0.01331697502322327920;
data->A->x[26] = 0.05923816412289610589;
data->A->x[27] = -0.00203179301802301759;
data->A->x[28] = -0.01584519051865036776;
data->A->x[29] = -0.06391797859353468003;
data->A->x[30] = 0.09618034532566892281;
data->A->x[31] = -0.09260064902861342429;
data->A->x[32] = -0.10506233343323562179;
data->A->x[33] = -0.21387757990888076054;
data->A->x[34] = 0.00652493825877686895;
data->A->x[35] = -0.10568586366883753191;
data->A->x[36] = -0.02536960063090046291;
data->A->x[37] = -0.19646644885806410774;
data->A->x[38] = 0.07160178153722474015;
data->A->x[39] = -0.00656011905251384364;
data->A->x[40] = -0.05457228065399438721;
data->A->x[41] = -0.03728722243353316257;
data->A->x[42] = 0.06836507677425901486;
data->A->x[43] = -0.15075944774794006187;
data->A->x[44] = -0.10215597878446258662;
data->A->x[45] = -0.19444301549787720851;
data->A->x[46] = 0.24254247896688402308;
data->A->x[47] = 0.12459583816186710348;
data->A->x[48] = 0.40206398094621786932;
data->A->x[49] = 0.28162359090169797327;
data->A->x[50] = 0.33341750777490303248;
data->A->x[51] = 0.24488002730407193441;
data->A->x[52] = 0.11443933094966396435;
data->A->x[53] = 0.32273029202093439505;
data->A->x[54] = 0.19619990991080649145;
data->A->x[55] = 0.23369026188380495612;
data->A->x[56] = 0.39349852353723224763;
data->A->x[57] = 0.36493684541992266190;
data->A->x[58] = 0.17229119008886212283;
data->A->x[59] = 0.14551872408296950834;
data->A->x[60] = 0.18711132089196141903;
data->A->x[61] = 0.25992467283422715507;
data->A->x[62] = 0.24638818499404094298;
data->A->x[63] = 0.15630541327885841274;
data->A->x[64] = 0.31261085650482256515;
data->A->x[65] = 0.29825012599570888128;
data->A->x[66] = 0.13358695653869312459;
data->A->x[67] = 0.25315592374251472130;
data->A->x[68] = 0.15120925854170649827;
data->A->x[69] = 0.37084056336145476696;
data->A->x[70] = -0.05961069361750678808;
data->A->x[71] = 0.07328114353149033089;
data->A->x[72] = 0.01792088095464361430;
data->A->x[73] = -0.07341092164977722212;
data->A->x[74] = -0.17276210651417620023;
data->A->x[75] = -0.06178127033235453203;
data->A->x[76] = -0.15326697560182592217;
data->A->x[77] = 0.08333062640305941016;
data->A->x[78] = -0.01778393229004884835;
data->A->x[79] = -0.01224881218007400907;
data->A->x[80] = -0.02272718116864938520;
data->A->x[81] = 0.05240079338257907365;
data->A->x[82] = -0.05343845881881184590;
data->A->x[83] = 0.07323796051227632331;
data->A->x[84] = -0.16984022542989737903;
data->A->x[85] = -0.11813243395080239018;
data->A->x[86] = -0.09407676382877083743;
data->A->x[87] = 0.04759417775391142774;
data->A->x[88] = -0.10495991502052984257;
data->A->x[89] = -0.10410054064756166237;
data->A->x[90] = -0.03481676146385595527;
data->A->x[91] = 0.03494489088807231636;
data->A->x[92] = -0.13744345565275345455;
data->A->x[93] = -0.08197947161023499962;
data->A->x[94] = 0.33569135614244632881;
data->A->x[95] = 0.12802292137366527713;
data->A->x[96] = 0.20609798758832098553;
data->A->x[97] = 0.20544275254219915294;
data->A->x[98] = 0.10356714856031259964;
data->A->x[99] = 0.34546061798556837452;
data->A->x[100] = 0.39480560349663385011;
data->A->x[101] = 0.40831932437613205344;
data->A->x[102] = 0.40316752846578229885;
data->A->x[103] = 0.29456385611319313433;
data->A->x[104] = 0.23148501347243077841;
data->A->x[105] = 0.40009288261814346388;
data->A->x[106] = 0.22547889612759647315;
data->A->x[107] = 0.18009235749543606175;
data->A->x[108] = 0.37817165088066839740;
data->A->x[109] = 0.22622338700340452466;
data->A->x[110] = 0.27567323133607157803;
data->A->x[111] = 0.11172824515788069843;
data->A->x[112] = 0.34422755386636660901;
data->A->x[113] = 0.28136325642533899227;
data->A->x[114] = 0.37287664547618237787;
data->A->x[115] = 0.25747614925794382046;
data->A->x[116] = 0.23008168767463393900;
data->A->x[117] = 0.11816641169001645961;
data->A->x[118] = 0.40549074603462886834;
data->A->x[119] = 0.35860107223863457726;
data->A->x[120] = -0.10900410648578875983;
data->A->x[121] = -0.05504318890736156766;
data->A->x[122] = -0.18103840204462975927;
data->A->x[123] = 0.01876313640944965444;
data->A->x[124] = 0.07963290861161677336;
data->A->x[125] = -0.03523262072887628493;
data->A->x[126] = -0.20021933333976446590;
data->A->x[127] = -0.20299050423044759373;
data->A->x[128] = -0.10470016355616179604;
data->A->x[129] = -0.05972539697066323039;
data->A->x[130] = -0.12116137921446046288;
data->A->x[131] = 0.08044394094007650819;
data->A->x[132] = 0.04791009209306396066;
data->A->x[133] = -0.03457750890078029049;
data->A->x[134] = -0.04888080065114974726;
data->A->x[135] = -0.03739703324294876841;
data->A->x[136] = 0.09094883678886744871;
data->A->x[137] = -0.00375992280953517388;
data->A->x[138] = -0.16154683043243209251;
data->A->x[139] = -0.13806316715957245300;
data->A->x[140] = -0.00821164298831369988;
data->A->x[141] = 0.05763162514262036573;
data->A->x[142] = 0.02001669018289399526;
data->A->x[143] = -0.14164957337248640368;
data->A->x[144] = -0.06278241057347658249;
data->A->x[145] = -0.01015745259363236286;
data->A->x[146] = 0.00235116144524724624;
data->A->x[147] = 0.00117139340457619867;
data->A->x[148] = -0.15086753668849653409;
data->A->x[149] = -0.03509649818438609348;
data->A->x[150] = 0.02861921248302855270;
data->A->x[151] = -0.06960450581448321405;
data->A->x[152] = -0.19503996048902635940;
data->A->x[153] = 0.17808311395370074459;
data->A->x[154] = 0.34400051625480904116;
data->A->x[155] = 0.35287507272563523042;
data->A->x[156] = 0.14932915988686087938;
data->A->x[157] = 0.33265892417475323439;
data->A->x[158] = 0.18283064595203496472;
data->A->x[159] = 0.15239566552707828340;
data->A->x[160] = 0.36442333492733958167;
data->A->x[161] = 0.26579059819918438023;
data->A->x[162] = 0.26211786373531087424;
data->A->x[163] = 0.24313870298996084762;
data->A->x[164] = 0.14779973664296824909;
data->A->x[165] = 0.39013843481297272309;
data->A->x[166] = 0.37518540548505596721;
data->A->x[167] = 0.32962513724695541306;
data->A->x[168] = 0.38124499158603841753;
data->A->x[169] = 0.13404630697038513731;
data->A->x[170] = 0.28508248576620198733;
data->A->x[171] = 0.41209872180854667523;
data->A->x[172] = 0.36677179656271496899;
data->A->x[173] = 0.40611247916324932916;
data->A->x[174] = 0.10571453768615708679;
data->A->x[175] = 0.29252360295352103359;
data->A->x[176] = 0.26532262082008145621;
data->A->x[177] = -0.16792064692178046426;
data->A->x[178] = 0.05510848573075569773;
data->A->x[179] = -0.15954296311620155824;
data->A->x[180] = -0.16807231627600380253;
data->A->x[181] = -0.07612632829522555933;
data->A->x[182] = -0.03999442795373070458;
data->A->x[183] = -0.06077342355168177668;
data->A->x[184] = -0.06742815066016294434;
data->A->x[185] = 0.01343694037966412791;
data->A->x[186] = -0.18701755436421577117;
data->A->x[187] = 0.00372546084168012825;
data->A->x[188] = -0.11919244262761816144;
data->A->x[189] = -0.09279089572549262255;
data->A->x[190] = -0.00832617353010159378;
data->A->x[191] = -0.16908269451498833535;
data->A->x[192] = 0.00786759890187146982;
data->A->x[193] = -0.06286386623263578999;
data->A->x[194] = 0.06037057981331408335;
data->A->x[195] = -0.05009882749926233836;
data->A->x[196] = -0.01059413697922403919;
data->A->x[197] = -0.04888509842178964671;
data->A->x[198] = -0.17612141212762980058;
data->A->x[199] = 0.03535338119756434305;
data->A->x[200] = -0.07153807346202389894;
data->A->x[201] = -0.13733652780302088581;
data->A->x[202] = 0.06656390270266454579;
data->A->x[203] = 0.19934185267637349881;
data->A->x[204] = 0.35918175110552819085;
data->A->x[205] = 0.11141256208656960536;
data->A->x[206] = 0.37233207798421630308;
data->A->x[207] = 0.15242239723713618682;
data->A->x[208] = 0.37823398130272722906;
data->A->x[209] = 0.25906146970618393333;
data->A->x[210] = 0.34163720758621063389;
data->A->x[211] = 0.18876032681372365007;
data->A->x[212] = 0.41058068516331291953;
data->A->x[213] = 0.29758134698874039170;
data->A->x[214] = 0.37838904937637218850;
data->A->x[215] = 0.29402286553510414979;
data->A->x[216] = 0.38292791102831102990;
data->A->x[217] = 0.25180922773486780208;
data->A->x[218] = 0.11780162147836671649;
data->A->x[219] = 0.38149530153465005533;
data->A->x[220] = 0.21270676607134128555;
data->A->x[221] = 0.40140332619298269012;
data->A->x[222] = 0.21242158801520749645;
data->A->x[223] = 0.22024727208402455902;
data->A->x[224] = 0.27552518091444189174;
data->A->x[225] = 0.17161345104246969462;
data->A->x[226] = 0.01657073817194355814;
data->A->x[227] = -0.12729341875957655983;
data->A->x[228] = -0.21353356703044898413;
data->A->x[229] = 0.08171838803791400818;
data->A->x[230] = 0.00848801593675377331;
data->A->x[231] = -0.04987658960666238595;
data->A->x[232] = 0.07494533391008385836;
data->A->x[233] = -0.14817889438186113149;
data->A->x[234] = 0.04332926133510738714;
data->A->x[235] = -0.09522604445926011185;
data->A->x[236] = -0.11951252465957248883;
data->A->x[237] = -0.19789324260949645029;
data->A->x[238] = -0.13415972670483597429;
data->A->x[239] = -0.12963889783642773557;
data->A->x[240] = 0.00581063049938858323;
data->A->x[241] = -0.05708699649078918803;
data->A->x[242] = -0.14768245310584249275;
data->A->x[243] = -0.18880702923584466446;
data->A->x[244] = 0.04892181920269723233;
data->A->x[245] = 0.08981885723697070889;
data->A->x[246] = -0.06630656172245316671;
data->A->x[247] = -0.16463906424137816908;
data->A->x[248] = -0.10863425528252962371;
data->A->x[249] = -0.17673414091802061576;
data->A->x[250] = -0.14884310825376309562;
data->A->x[251] = -0.16109105434847684202;
data->A->x[252] = 0.28466430030993927769;
data->A->x[253] = 0.25485661148142979560;
data->A->x[254] = 0.31959072774658736638;
data->A->x[255] = 0.22861074011836043929;
data->A->x[256] = 0.21416374670249854750;
data->A->x[257] = 0.25129928394317352369;
data->A->x[258] = 0.23907319866252663143;
data->A->x[259] = 0.14386541524576318407;
data->A->x[260] = 0.32486808411932577290;
data->A->x[261] = 0.27333172740827904601;
data->A->x[262] = 0.15157340249558884371;
data->A->x[263] = 0.29115336223199028698;
data->A->x[264] = 0.27846770355861227841;
data->A->x[265] = 0.18534395840714340542;
data->A->x[266] = 0.15072811626661172801;
data->A->x[267] = 0.24499776161172856503;
data->A->x[268] = 0.31216733173014593605;
data->A->x[269] = 0.25863130493472308302;
data->A->x[270] = 0.27520034940136350876;
data->A->x[271] = 0.13930079884895379960;
data->A->x[272] = 0.16466321555922303066;
data->A->x[273] = 0.13225764984355331544;
data->A->x[274] = 0.16421252960466359294;
data->A->x[275] = 0.17901572491500994389;
data->A->x[276] = 0.19577632056210275691;
data->A->x[277] = 0.21980190824239162484;
data->A->x[278] = 0.07427585000004748028;
data->A->x[279] = -0.20308447471894067182;
data->A->x[280] = -0.13634295926359804585;
data->A->x[281] = -0.07285642938629460774;
data->A->x[282] = -0.00053862339989481367;
data->A->x[283] = -0.13217171863043264413;
data->A->x[284] = -0.15798614885992953716;
data->A->x[285] = 0.00516144410345817373;
data->A->x[286] = -0.15021747664378240494;
data->A->x[287] = -0.20595576595940331965;
data->A->x[288] = -0.13529673894068611206;
data->A->x[289] = 0.04167159452898544503;
data->A->x[290] = 0.02589015550237151742;
data->A->x[291] = -0.01151588455721663795;
data->A->x[292] = -0.03587505838466975572;
data->A->x[293] = -0.00751840291749431011;
data->A->x[294] = -0.12895896480443980181;
data->A->x[295] = 0.00524954711118803818;
data->A->x[296] = -0.07385896093203137003;
data->A->x[297] = 0.02100929740208563878;
data->A->x[298] = -0.19362101356307079292;
data->A->x[299] = 0.04497704403337026563;
data->A->x[300] = -0.03011191058943604726;
data->A->x[301] = -0.17460282359631315585;
data->A->x[302] = 0.08390587284375489174;
data->A->x[303] = -0.12162751166988475249;
data->A->x[304] = 0.27841847061625357718;
data->A->x[305] = 0.32874801995211161421;
data->A->x[306] = 0.24106905054052854553;
data->A->x[307] = 0.35463793019604306078;
data->A->x[308] = 0.19609479658106376831;
data->A->x[309] = 0.30845733211702958121;
data->A->x[310] = 0.41395932832659632084;
data->A->x[311] = 0.41003344283883558230;
data->A->x[312] = 0.35804423102292137759;
data->A->x[313] = 0.35475666953351447930;
data->A->x[314] = 0.34631684092832581978;
data->A->x[315] = 0.38765246084875559784;
data->A->x[316] = 0.18772331090587718316;
data->A->x[317] = 0.38046887758900016507;
data->A->x[318] = 0.30452154500514583280;
data->A->x[319] = 0.32925884433625784986;
data->A->x[320] = 0.24730132844232063927;
data->A->x[321] = 0.36526382060223638870;
data->A->x[322] = 0.18152443165858134222;
data->A->x[323] = 0.22264191531933066881;
data->A->x[324] = 0.34009656425332057683;
data->A->x[325] = 0.11417857533054120989;
data->A->x[326] = 0.28255178977020245501;
data->A->x[327] = 0.41431075760820490483;
data->A->x[328] = 0.18365783866235008137;
data->A->x[329] = 0.36607722327716485378;
data->A->x[330] = 0.12620119614125352436;
data->A->x[331] = 0.13309912178984767417;
data->A->x[332] = -0.17155638614790938434;
data->A->x[333] = -0.20673487054932213058;
data->A->x[334] = -0.20502742313371283278;
data->A->x[335] = -0.15181717881569598005;
data->A->x[336] = -0.17554982829339646488;
data->A->x[337] = -0.19442616189283948303;
data->A->x[338] = -0.20289455208521675611;
data->A->x[339] = 0.08497350345462230392;
data->A->x[340] = -0.12810870431568774364;
data->A->x[341] = -0.06137979567858672936;
data->A->x[342] = -0.06658323086621753539;
data->A->x[343] = -0.10379889619885027119;
data->A->x[344] = 0.00002073626509553617;
data->A->x[345] = -0.10471538795203336192;
data->A->x[346] = -0.17158512518338611685;
data->A->x[347] = -0.03188250517780322202;
data->A->x[348] = -0.12313699464844904408;
data->A->x[349] = -0.02046924975271578739;
data->A->x[350] = -0.17051761431918846523;
data->A->x[351] = 0.06975862146212827297;
data->A->x[352] = 0.21766445562302974559;
data->A->x[353] = 0.15275115990933438304;
data->A->x[354] = 0.14041612191457547576;
data->A->x[355] = 0.17127472590733228142;
data->A->x[356] = 0.16619672805740987043;
data->A->x[357] = 0.24450910266116629432;
data->A->x[358] = 0.20114510856203293709;
data->A->x[359] = 0.19670189505702692645;
data->A->x[360] = 0.13538581161111348794;
data->A->x[361] = 0.38059144128723687572;
data->A->x[362] = 0.18446050000902708410;
data->A->x[363] = 0.23895188465575475933;
data->A->x[364] = 0.12163980135696038365;
data->A->x[365] = 0.32009623146314725162;
data->A->x[366] = 0.29457628303546218307;
data->A->x[367] = 0.21424509528385854429;
data->A->x[368] = 0.15250281594692238762;
data->A->x[369] = 0.28449946447315022091;
data->A->x[370] = 0.11448687385543451778;
data->A->x[371] = 0.41615475438402527164;
data->A->x[372] = 0.37545897857568344413;
data->A->x[373] = 0.01480902097497022174;
data->A->x[374] = -0.06279943834973547578;
data->A->x[375] = -0.03921595151266177304;
data->A->x[376] = -0.04916295156595279492;
data->A->x[377] = 0.03198266471279417877;
data->A->x[378] = -0.07313274599155164535;
data->A->x[379] = -0.19441179514246356708;
data->A->x[380] = -0.03853714117433837405;
data->A->x[381] = -0.06309489993539962871;
data->A->x[382] = 0.07728689998130872096;
data->A->x[383] = -0.08702844128906717103;
data->A->x[384] = -0.18318068678311802411;
data->A->x[385] = 0.08374429398257675350;
data->A->x[386] = -0.11428230084430443525;
data->A->x[387] = -0.02371371006195463482;
data->A->x[388] = -0.04338837899821032518;
data->A->x[389] = 0.00224580572734044137;
data->A->x[390] = 0.08649127323136206191;
data->A->x[391] = -0.16587262302185809548;
data->A->x[392] = 0.01685568941929815878;
data->A->x[393] = 0.01586982397487296526;
data->A->x[394] = -0.06992364017120702990;
data->A->x[395] = -0.02918717453935948392;
data->A->x[396] = -0.07166316348503096179;
data->A->x[397] = -0.04437647756151277822;
data->A->x[398] = -0.19759528408096546648;
data->A->x[399] = -0.14059849607670174554;
data->A->x[400] = -0.17048795569231803282;
data->A->x[401] = 0.29687979571336792217;
data->A->x[402] = 0.18723013100577676204;
data->A->x[403] = 0.16440747782641007557;
data->A->x[404] = 0.20118385203281127782;
data->A->x[405] = 0.14415527867702948583;
data->A->x[406] = 0.22242297194876772815;
data->A->x[407] = 0.25463768426889243912;
data->A->x[408] = 0.30671485098810241654;
data->A->x[409] = 0.38574399961844874074;
data->A->x[410] = 0.16117760363345942642;
data->A->x[411] = 0.28517623147917559034;
data->A->x[412] = 0.32739602303455700438;
data->A->x[413] = 0.28142995738472192935;
data->A->x[414] = 0.17850709187324345639;
data->A->x[415] = 0.31504093372511182691;
data->A->x[416] = 0.37805014592373631377;
data->A->x[417] = 0.15774138315254149223;
data->A->x[418] = 0.14256620214558254900;
data->A->x[419] = 0.39128801459493711690;
data->A->x[420] = 0.35704739916789518528;
data->A->x[421] = 0.21370295361291963276;
data->A->x[422] = 0.37654442808602317516;
data->A->x[423] = 0.26146567820912025581;
data->A->x[424] = 0.17827476957418436632;
data->A->x[425] = 0.25418455383034849193;
data->A->x[426] = 0.28510486619672081865;
data->A->x[427] = 0.30556499243467116766;
data->A->x[428] = 0.19898391917955074448;
data->A->x[429] = 0.16941961341192030011;
data->A->x[430] = -0.05065152692831031978;
data->A->x[431] = -0.05134035405589351675;
data->A->x[432] = -0.21553261842168883189;
data->A->x[433] = -0.10040105617416167361;
data->A->x[434] = 0.03106324080705541446;
data->A->x[435] = -0.17893943068331516488;
data->A->x[436] = -0.10477406467449029703;
data->A->x[437] = -0.03425613458221235530;
data->A->x[438] = -0.11424976340271725261;
data->A->x[439] = -0.13276148937918505477;
data->A->x[440] = -0.02838393886157153378;
data->A->x[441] = -0.16999302873382990398;
data->A->x[442] = -0.05670794541100149244;
data->A->x[443] = -0.12926468609837166168;
data->A->x[444] = 0.02056359423128961694;
data->A->x[445] = -0.10774009524837802054;
data->A->x[446] = -0.20572440102927699868;
data->A->x[447] = 0.05855922907487973172;
data->A->x[448] = 0.00500771815392346553;
data->A->x[449] = -0.09758800577404813659;
data->A->x[450] = -0.11010173612516949149;
data->A->x[451] = -0.04365218766390613347;
data->A->x[452] = 0.24229186338608893481;
data->A->x[453] = 0.38044404143577958965;
data->A->x[454] = 0.26292581377701962353;
data->A->x[455] = 0.29472147080648425366;
data->A->x[456] = 0.19663022872263041796;
data->A->x[457] = 0.11633039339455089611;
data->A->x[458] = 0.30096817225206040636;
data->A->x[459] = 0.33253925587006288866;
data->A->x[460] = 0.16339568372669432961;
data->A->x[461] = 0.18904429819661355827;
data->A->x[462] = 0.40879039924603455258;
data->A->x[463] = 0.27117174316546405199;
data->A->x[464] = 0.32632671951667285848;
data->A->x[465] = 0.41352419762483005883;
data->A->x[466] = 0.34649960470019591785;
data->A->x[467] = 0.28510683656835056343;
data->A->x[468] = 0.41444575643038239487;
data->A->x[469] = 0.24486423995814263210;
data->A->x[470] = 0.40660321912453878390;
data->A->x[471] = 0.30208819081783006011;
data->A->x[472] = 0.12727671525566836008;
data->A->x[473] = 0.35585268862589769512;
data->A->x[474] = 0.29084176317063004102;
data->A->x[475] = 0.39125141989817602273;
data->A->x[476] = 0.20389752425118645718;
data->A->x[477] = -0.17328972868574984978;
data->A->x[478] = -0.19860090477130257214;
data->A->x[479] = -0.02721126066408119382;
data->A->x[480] = -0.09777514857062086229;
data->A->x[481] = -0.03138810741249739578;
data->A->x[482] = -0.20087945419202399289;
data->A->x[483] = -0.03339817670955305684;
data->A->x[484] = -0.09218351235219868212;
data->A->x[485] = 0.03608512932296448206;
data->A->x[486] = -0.05312557233326600792;
data->A->x[487] = 0.04257005719385970749;
data->A->x[488] = -0.12502953105484093665;
data->A->x[489] = -0.02545437287440699414;
data->A->x[490] = -0.08484445963730422036;
data->A->x[491] = -0.19200357487755972952;
data->A->x[492] = 0.05503941191860244053;
data->A->x[493] = -0.12358307134867618782;
data->A->x[494] = -0.16825490457658173749;
data->A->x[495] = 0.09170850026763831264;
data->A->x[496] = -0.20898324179430985414;
data->A->x[497] = -0.15261966098255838609;
data->A->x[498] = 0.08244191250814232597;
data->A->x[499] = -0.10406484001963345332;
data->A->x[500] = -1.00000000000000000000;
data->A->x[501] = 1.00000000000000000000;
data->A->x[502] = -1.00000000000000000000;
data->A->x[503] = 1.00000000000000000000;
data->A->x[504] = -1.00000000000000000000;
data->A->x[505] = 1.00000000000000000000;
data->A->x[506] = -1.00000000000000000000;
data->A->x[507] = 1.00000000000000000000;
data->A->x[508] = -1.00000000000000000000;
data->A->x[509] = 1.00000000000000000000;
data->A->x[510] = -1.00000000000000000000;
data->A->x[511] = 1.00000000000000000000;
data->A->x[512] = -1.00000000000000000000;
data->A->x[513] = 1.00000000000000000000;
data->A->x[514] = -1.00000000000000000000;
data->A->x[515] = 1.00000000000000000000;
data->A->x[516] = -1.00000000000000000000;
data->A->x[517] = 1.00000000000000000000;
data->A->x[518] = -1.00000000000000000000;
data->A->x[519] = 1.00000000000000000000;
data->A->x[520] = -1.00000000000000000000;
data->A->x[521] = 1.00000000000000000000;
data->A->x[522] = -1.00000000000000000000;
data->A->x[523] = 1.00000000000000000000;
data->A->x[524] = -1.00000000000000000000;
data->A->x[525] = 1.00000000000000000000;
data->A->x[526] = -1.00000000000000000000;
data->A->x[527] = 1.00000000000000000000;
data->A->x[528] = -1.00000000000000000000;
data->A->x[529] = 1.00000000000000000000;
data->A->x[530] = -1.00000000000000000000;
data->A->x[531] = 1.00000000000000000000;
data->A->x[532] = -1.00000000000000000000;
data->A->x[533] = 1.00000000000000000000;
data->A->x[534] = -1.00000000000000000000;
data->A->x[535] = 1.00000000000000000000;
data->A->x[536] = -1.00000000000000000000;
data->A->x[537] = 1.00000000000000000000;
data->A->x[538] = -1.00000000000000000000;
data->A->x[539] = 1.00000000000000000000;
data->A->x[540] = -1.00000000000000000000;
data->A->x[541] = 1.00000000000000000000;
data->A->x[542] = -1.00000000000000000000;
data->A->x[543] = 1.00000000000000000000;
data->A->x[544] = -1.00000000000000000000;
data->A->x[545] = 1.00000000000000000000;
data->A->x[546] = -1.00000000000000000000;
data->A->x[547] = 1.00000000000000000000;
data->A->x[548] = -1.00000000000000000000;
data->A->x[549] = 1.00000000000000000000;
data->A->x[550] = -1.00000000000000000000;
data->A->x[551] = 1.00000000000000000000;
data->A->x[552] = -1.00000000000000000000;
data->A->x[553] = 1.00000000000000000000;
data->A->x[554] = -1.00000000000000000000;
data->A->x[555] = 1.00000000000000000000;
data->A->x[556] = -1.00000000000000000000;
data->A->x[557] = 1.00000000000000000000;
data->A->x[558] = -1.00000000000000000000;
data->A->x[559] = 1.00000000000000000000;
data->A->x[560] = -1.00000000000000000000;
data->A->x[561] = 1.00000000000000000000;
data->A->x[562] = -1.00000000000000000000;
data->A->x[563] = 1.00000000000000000000;
data->A->x[564] = -1.00000000000000000000;
data->A->x[565] = 1.00000000000000000000;
data->A->x[566] = -1.00000000000000000000;
data->A->x[567] = 1.00000000000000000000;
data->A->x[568] = -1.00000000000000000000;
data->A->x[569] = 1.00000000000000000000;
data->A->x[570] = -1.00000000000000000000;
data->A->x[571] = 1.00000000000000000000;
data->A->x[572] = -1.00000000000000000000;
data->A->x[573] = 1.00000000000000000000;
data->A->x[574] = -1.00000000000000000000;
data->A->x[575] = 1.00000000000000000000;
data->A->x[576] = -1.00000000000000000000;
data->A->x[577] = 1.00000000000000000000;
data->A->x[578] = -1.00000000000000000000;
data->A->x[579] = 1.00000000000000000000;
data->A->x[580] = -1.00000000000000000000;
data->A->x[581] = 1.00000000000000000000;
data->A->x[582] = -1.00000000000000000000;
data->A->x[583] = 1.00000000000000000000;
data->A->x[584] = -1.00000000000000000000;
data->A->x[585] = 1.00000000000000000000;
data->A->x[586] = -1.00000000000000000000;
data->A->x[587] = 1.00000000000000000000;
data->A->x[588] = -1.00000000000000000000;
data->A->x[589] = 1.00000000000000000000;
data->A->x[590] = -1.00000000000000000000;
data->A->x[591] = 1.00000000000000000000;
data->A->x[592] = -1.00000000000000000000;
data->A->x[593] = 1.00000000000000000000;
data->A->x[594] = -1.00000000000000000000;
data->A->x[595] = 1.00000000000000000000;
data->A->x[596] = -1.00000000000000000000;
data->A->x[597] = 1.00000000000000000000;
data->A->x[598] = -1.00000000000000000000;
data->A->x[599] = 1.00000000000000000000;
data->A->x[600] = -1.00000000000000000000;
data->A->x[601] = 1.00000000000000000000;
data->A->x[602] = -1.00000000000000000000;
data->A->x[603] = 1.00000000000000000000;
data->A->x[604] = -1.00000000000000000000;
data->A->x[605] = 1.00000000000000000000;
data->A->x[606] = -1.00000000000000000000;
data->A->x[607] = 1.00000000000000000000;
data->A->x[608] = -1.00000000000000000000;
data->A->x[609] = 1.00000000000000000000;
data->A->x[610] = -1.00000000000000000000;
data->A->x[611] = 1.00000000000000000000;
data->A->x[612] = -1.00000000000000000000;
data->A->x[613] = 1.00000000000000000000;
data->A->x[614] = -1.00000000000000000000;
data->A->x[615] = 1.00000000000000000000;
data->A->x[616] = -1.00000000000000000000;
data->A->x[617] = 1.00000000000000000000;
data->A->x[618] = -1.00000000000000000000;
data->A->x[619] = 1.00000000000000000000;
data->A->x[620] = -1.00000000000000000000;
data->A->x[621] = 1.00000000000000000000;
data->A->x[622] = -1.00000000000000000000;
data->A->x[623] = 1.00000000000000000000;
data->A->x[624] = -1.00000000000000000000;
data->A->x[625] = 1.00000000000000000000;
data->A->x[626] = -1.00000000000000000000;
data->A->x[627] = 1.00000000000000000000;
data->A->x[628] = -1.00000000000000000000;
data->A->x[629] = 1.00000000000000000000;
data->A->x[630] = -1.00000000000000000000;
data->A->x[631] = 1.00000000000000000000;
data->A->x[632] = -1.00000000000000000000;
data->A->x[633] = 1.00000000000000000000;
data->A->x[634] = -1.00000000000000000000;
data->A->x[635] = 1.00000000000000000000;
data->A->x[636] = -1.00000000000000000000;
data->A->x[637] = 1.00000000000000000000;
data->A->x[638] = -1.00000000000000000000;
data->A->x[639] = 1.00000000000000000000;
data->A->x[640] = -1.00000000000000000000;
data->A->x[641] = 1.00000000000000000000;
data->A->x[642] = -1.00000000000000000000;
data->A->x[643] = 1.00000000000000000000;
data->A->x[644] = -1.00000000000000000000;
data->A->x[645] = 1.00000000000000000000;
data->A->x[646] = -1.00000000000000000000;
data->A->x[647] = 1.00000000000000000000;
data->A->x[648] = -1.00000000000000000000;
data->A->x[649] = 1.00000000000000000000;
data->A->x[650] = -1.00000000000000000000;
data->A->x[651] = 1.00000000000000000000;
data->A->x[652] = -1.00000000000000000000;
data->A->x[653] = 1.00000000000000000000;
data->A->x[654] = -1.00000000000000000000;
data->A->x[655] = 1.00000000000000000000;
data->A->x[656] = -1.00000000000000000000;
data->A->x[657] = 1.00000000000000000000;
data->A->x[658] = -1.00000000000000000000;
data->A->x[659] = 1.00000000000000000000;
data->A->x[660] = -1.00000000000000000000;
data->A->x[661] = 1.00000000000000000000;
data->A->x[662] = -1.00000000000000000000;
data->A->x[663] = 1.00000000000000000000;
data->A->x[664] = -1.00000000000000000000;
data->A->x[665] = 1.00000000000000000000;
data->A->x[666] = -1.00000000000000000000;
data->A->x[667] = 1.00000000000000000000;
data->A->x[668] = -1.00000000000000000000;
data->A->x[669] = 1.00000000000000000000;
data->A->x[670] = -1.00000000000000000000;
data->A->x[671] = 1.00000000000000000000;
data->A->x[672] = -1.00000000000000000000;
data->A->x[673] = 1.00000000000000000000;
data->A->x[674] = -1.00000000000000000000;
data->A->x[675] = 1.00000000000000000000;
data->A->x[676] = -1.00000000000000000000;
data->A->x[677] = 1.00000000000000000000;
data->A->x[678] = -1.00000000000000000000;
data->A->x[679] = 1.00000000000000000000;
data->A->x[680] = -1.00000000000000000000;
data->A->x[681] = 1.00000000000000000000;
data->A->x[682] = -1.00000000000000000000;
data->A->x[683] = 1.00000000000000000000;
data->A->x[684] = -1.00000000000000000000;
data->A->x[685] = 1.00000000000000000000;
data->A->x[686] = -1.00000000000000000000;
data->A->x[687] = 1.00000000000000000000;
data->A->x[688] = -1.00000000000000000000;
data->A->x[689] = 1.00000000000000000000;
data->A->x[690] = -1.00000000000000000000;
data->A->x[691] = 1.00000000000000000000;
data->A->x[692] = -1.00000000000000000000;
data->A->x[693] = 1.00000000000000000000;
data->A->x[694] = -1.00000000000000000000;
data->A->x[695] = 1.00000000000000000000;
data->A->x[696] = -1.00000000000000000000;
data->A->x[697] = 1.00000000000000000000;
data->A->x[698] = -1.00000000000000000000;
data->A->x[699] = 1.00000000000000000000;
data->A->i = (int*) malloc(700 * sizeof(int));
data->A->i[0] = 0;
data->A->i[1] = 4;
data->A->i[2] = 5;
data->A->i[3] = 6;
data->A->i[4] = 9;
data->A->i[5] = 11;
data->A->i[6] = 12;
data->A->i[7] = 13;
data->A->i[8] = 14;
data->A->i[9] = 16;
data->A->i[10] = 17;
data->A->i[11] = 18;
data->A->i[12] = 19;
data->A->i[13] = 23;
data->A->i[14] = 27;
data->A->i[15] = 29;
data->A->i[16] = 31;
data->A->i[17] = 34;
data->A->i[18] = 38;
data->A->i[19] = 39;
data->A->i[20] = 40;
data->A->i[21] = 41;
data->A->i[22] = 46;
data->A->i[23] = 47;
data->A->i[24] = 50;
data->A->i[25] = 51;
data->A->i[26] = 56;
data->A->i[27] = 58;
data->A->i[28] = 62;
data->A->i[29] = 65;
data->A->i[30] = 66;
data->A->i[31] = 69;
data->A->i[32] = 72;
data->A->i[33] = 73;
data->A->i[34] = 74;
data->A->i[35] = 77;
data->A->i[36] = 80;
data->A->i[37] = 83;
data->A->i[38] = 85;
data->A->i[39] = 86;
data->A->i[40] = 89;
data->A->i[41] = 90;
data->A->i[42] = 94;
data->A->i[43] = 96;
data->A->i[44] = 97;
data->A->i[45] = 99;
data->A->i[46] = 1;
data->A->i[47] = 8;
data->A->i[48] = 9;
data->A->i[49] = 11;
data->A->i[50] = 12;
data->A->i[51] = 15;
data->A->i[52] = 16;
data->A->i[53] = 17;
data->A->i[54] = 19;
data->A->i[55] = 20;
data->A->i[56] = 23;
data->A->i[57] = 28;
data->A->i[58] = 30;
data->A->i[59] = 31;
data->A->i[60] = 32;
data->A->i[61] = 35;
data->A->i[62] = 38;
data->A->i[63] = 39;
data->A->i[64] = 40;
data->A->i[65] = 41;
data->A->i[66] = 42;
data->A->i[67] = 43;
data->A->i[68] = 45;
data->A->i[69] = 48;
data->A->i[70] = 50;
data->A->i[71] = 51;
data->A->i[72] = 57;
data->A->i[73] = 58;
data->A->i[74] = 60;
data->A->i[75] = 61;
data->A->i[76] = 62;
data->A->i[77] = 63;
data->A->i[78] = 65;
data->A->i[79] = 66;
data->A->i[80] = 71;
data->A->i[81] = 75;
data->A->i[82] = 78;
data->A->i[83] = 79;
data->A->i[84] = 80;
data->A->i[85] = 81;
data->A->i[86] = 82;
data->A->i[87] = 87;
data->A->i[88] = 88;
data->A->i[89] = 90;
data->A->i[90] = 93;
data->A->i[91] = 94;
data->A->i[92] = 96;
data->A->i[93] = 98;
data->A->i[94] = 1;
data->A->i[95] = 2;
data->A->i[96] = 5;
data->A->i[97] = 6;
data->A->i[98] = 7;
data->A->i[99] = 10;
data->A->i[100] = 11;
data->A->i[101] = 12;
data->A->i[102] = 17;
data->A->i[103] = 19;
data->A->i[104] = 20;
data->A->i[105] = 22;
data->A->i[106] = 23;
data->A->i[107] = 24;
data->A->i[108] = 25;
data->A->i[109] = 27;
data->A->i[110] = 28;
data->A->i[111] = 31;
data->A->i[112] = 32;
data->A->i[113] = 35;
data->A->i[114] = 38;
data->A->i[115] = 39;
data->A->i[116] = 42;
data->A->i[117] = 45;
data->A->i[118] = 46;
data->A->i[119] = 47;
data->A->i[120] = 50;
data->A->i[121] = 51;
data->A->i[122] = 52;
data->A->i[123] = 57;
data->A->i[124] = 58;
data->A->i[125] = 59;
data->A->i[126] = 60;
data->A->i[127] = 61;
data->A->i[128] = 62;
data->A->i[129] = 65;
data->A->i[130] = 66;
data->A->i[131] = 68;
data->A->i[132] = 69;
data->A->i[133] = 70;
data->A->i[134] = 71;
data->A->i[135] = 72;
data->A->i[136] = 74;
data->A->i[137] = 76;
data->A->i[138] = 78;
data->A->i[139] = 80;
data->A->i[140] = 81;
data->A->i[141] = 82;
data->A->i[142] = 83;
data->A->i[143] = 85;
data->A->i[144] = 87;
data->A->i[145] = 88;
data->A->i[146] = 91;
data->A->i[147] = 92;
data->A->i[148] = 93;
data->A->i[149] = 94;
data->A->i[150] = 97;
data->A->i[151] = 98;
data->A->i[152] = 99;
data->A->i[153] = 0;
data->A->i[154] = 7;
data->A->i[155] = 9;
data->A->i[156] = 11;
data->A->i[157] = 12;
data->A->i[158] = 13;
data->A->i[159] = 14;
data->A->i[160] = 15;
data->A->i[161] = 17;
data->A->i[162] = 18;
data->A->i[163] = 21;
data->A->i[164] = 22;
data->A->i[165] = 23;
data->A->i[166] = 24;
data->A->i[167] = 29;
data->A->i[168] = 30;
data->A->i[169] = 35;
data->A->i[170] = 36;
data->A->i[171] = 37;
data->A->i[172] = 38;
data->A->i[173] = 39;
data->A->i[174] = 41;
data->A->i[175] = 42;
data->A->i[176] = 47;
data->A->i[177] = 52;
data->A->i[178] = 53;
data->A->i[179] = 54;
data->A->i[180] = 55;
data->A->i[181] = 57;
data->A->i[182] = 59;
data->A->i[183] = 61;
data->A->i[184] = 62;
data->A->i[185] = 63;
data->A->i[186] = 67;
data->A->i[187] = 69;
data->A->i[188] = 71;
data->A->i[189] = 72;
data->A->i[190] = 77;
data->A->i[191] = 81;
data->A->i[192] = 84;
data->A->i[193] = 86;
data->A->i[194] = 88;
data->A->i[195] = 89;
data->A->i[196] = 90;
data->A->i[197] = 92;
data->A->i[198] = 93;
data->A->i[199] = 94;
data->A->i[200] = 95;
data->A->i[201] = 96;
data->A->i[202] = 99;
data->A->i[203] = 1;
data->A->i[204] = 4;
data->A->i[205] = 6;
data->A->i[206] = 7;
data->A->i[207] = 8;
data->A->i[208] = 13;
data->A->i[209] = 14;
data->A->i[210] = 18;
data->A->i[211] = 21;
data->A->i[212] = 23;
data->A->i[213] = 24;
data->A->i[214] = 25;
data->A->i[215] = 30;
data->A->i[216] = 32;
data->A->i[217] = 33;
data->A->i[218] = 36;
data->A->i[219] = 38;
data->A->i[220] = 42;
data->A->i[221] = 44;
data->A->i[222] = 45;
data->A->i[223] = 46;
data->A->i[224] = 47;
data->A->i[225] = 49;
data->A->i[226] = 51;
data->A->i[227] = 52;
data->A->i[228] = 53;
data->A->i[229] = 54;
data->A->i[230] = 56;
data->A->i[231] = 62;
data->A->i[232] = 66;
data->A->i[233] = 68;
data->A->i[234] = 69;
data->A->i[235] = 71;
data->A->i[236] = 72;
data->A->i[237] = 73;
data->A->i[238] = 74;
data->A->i[239] = 75;
data->A->i[240] = 77;
data->A->i[241] = 79;
data->A->i[242] = 80;
data->A->i[243] = 81;
data->A->i[244] = 86;
data->A->i[245] = 88;
data->A->i[246] = 89;
data->A->i[247] = 90;
data->A->i[248] = 95;
data->A->i[249] = 96;
data->A->i[250] = 97;
data->A->i[251] = 98;
data->A->i[252] = 0;
data->A->i[253] = 6;
data->A->i[254] = 7;
data->A->i[255] = 8;
data->A->i[256] = 10;
data->A->i[257] = 11;
data->A->i[258] = 17;
data->A->i[259] = 18;
data->A->i[260] = 20;
data->A->i[261] = 22;
data->A->i[262] = 23;
data->A->i[263] = 24;
data->A->i[264] = 25;
data->A->i[265] = 27;
data->A->i[266] = 33;
data->A->i[267] = 34;
data->A->i[268] = 35;
data->A->i[269] = 36;
data->A->i[270] = 39;
data->A->i[271] = 40;
data->A->i[272] = 41;
data->A->i[273] = 42;
data->A->i[274] = 43;
data->A->i[275] = 44;
data->A->i[276] = 45;
data->A->i[277] = 48;
data->A->i[278] = 51;
data->A->i[279] = 52;
data->A->i[280] = 53;
data->A->i[281] = 55;
data->A->i[282] = 58;
data->A->i[283] = 59;
data->A->i[284] = 62;
data->A->i[285] = 63;
data->A->i[286] = 66;
data->A->i[287] = 67;
data->A->i[288] = 69;
data->A->i[289] = 70;
data->A->i[290] = 72;
data->A->i[291] = 77;
data->A->i[292] = 79;
data->A->i[293] = 80;
data->A->i[294] = 81;
data->A->i[295] = 82;
data->A->i[296] = 83;
data->A->i[297] = 88;
data->A->i[298] = 89;
data->A->i[299] = 90;
data->A->i[300] = 93;
data->A->i[301] = 94;
data->A->i[302] = 96;
data->A->i[303] = 98;
data->A->i[304] = 0;
data->A->i[305] = 4;
data->A->i[306] = 5;
data->A->i[307] = 6;
data->A->i[308] = 10;
data->A->i[309] = 11;
data->A->i[310] = 12;
data->A->i[311] = 14;
data->A->i[312] = 15;
data->A->i[313] = 20;
data->A->i[314] = 22;
data->A->i[315] = 23;
data->A->i[316] = 24;
data->A->i[317] = 25;
data->A->i[318] = 26;
data->A->i[319] = 29;
data->A->i[320] = 30;
data->A->i[321] = 31;
data->A->i[322] = 34;
data->A->i[323] = 39;
data->A->i[324] = 40;
data->A->i[325] = 41;
data->A->i[326] = 42;
data->A->i[327] = 43;
data->A->i[328] = 44;
data->A->i[329] = 45;
data->A->i[330] = 47;
data->A->i[331] = 49;
data->A->i[332] = 51;
data->A->i[333] = 53;
data->A->i[334] = 58;
data->A->i[335] = 62;
data->A->i[336] = 63;
data->A->i[337] = 65;
data->A->i[338] = 66;
data->A->i[339] = 69;
data->A->i[340] = 71;
data->A->i[341] = 74;
data->A->i[342] = 77;
data->A->i[343] = 84;
data->A->i[344] = 85;
data->A->i[345] = 86;
data->A->i[346] = 87;
data->A->i[347] = 89;
data->A->i[348] = 92;
data->A->i[349] = 93;
data->A->i[350] = 97;
data->A->i[351] = 99;
data->A->i[352] = 0;
data->A->i[353] = 1;
data->A->i[354] = 10;
data->A->i[355] = 11;
data->A->i[356] = 14;
data->A->i[357] = 15;
data->A->i[358] = 20;
data->A->i[359] = 22;
data->A->i[360] = 23;
data->A->i[361] = 24;
data->A->i[362] = 25;
data->A->i[363] = 26;
data->A->i[364] = 28;
data->A->i[365] = 29;
data->A->i[366] = 30;
data->A->i[367] = 35;
data->A->i[368] = 36;
data->A->i[369] = 38;
data->A->i[370] = 39;
data->A->i[371] = 42;
data->A->i[372] = 47;
data->A->i[373] = 51;
data->A->i[374] = 56;
data->A->i[375] = 57;
data->A->i[376] = 58;
data->A->i[377] = 59;
data->A->i[378] = 61;
data->A->i[379] = 62;
data->A->i[380] = 64;
data->A->i[381] = 66;
data->A->i[382] = 69;
data->A->i[383] = 72;
data->A->i[384] = 73;
data->A->i[385] = 74;
data->A->i[386] = 75;
data->A->i[387] = 76;
data->A->i[388] = 77;
data->A->i[389] = 79;
data->A->i[390] = 82;
data->A->i[391] = 85;
data->A->i[392] = 89;
data->A->i[393] = 90;
data->A->i[394] = 91;
data->A->i[395] = 92;
data->A->i[396] = 93;
data->A->i[397] = 94;
data->A->i[398] = 95;
data->A->i[399] = 96;
data->A->i[400] = 99;
data->A->i[401] = 0;
data->A->i[402] = 1;
data->A->i[403] = 6;
data->A->i[404] = 7;
data->A->i[405] = 14;
data->A->i[406] = 15;
data->A->i[407] = 16;
data->A->i[408] = 17;
data->A->i[409] = 19;
data->A->i[410] = 20;
data->A->i[411] = 21;
data->A->i[412] = 22;
data->A->i[413] = 23;
data->A->i[414] = 24;
data->A->i[415] = 25;
data->A->i[416] = 26;
data->A->i[417] = 27;
data->A->i[418] = 28;
data->A->i[419] = 30;
data->A->i[420] = 33;
data->A->i[421] = 34;
data->A->i[422] = 36;
data->A->i[423] = 38;
data->A->i[424] = 41;
data->A->i[425] = 42;
data->A->i[426] = 44;
data->A->i[427] = 46;
data->A->i[428] = 47;
data->A->i[429] = 49;
data->A->i[430] = 50;
data->A->i[431] = 52;
data->A->i[432] = 56;
data->A->i[433] = 57;
data->A->i[434] = 58;
data->A->i[435] = 60;
data->A->i[436] = 63;
data->A->i[437] = 68;
data->A->i[438] = 69;
data->A->i[439] = 70;
data->A->i[440] = 71;
data->A->i[441] = 73;
data->A->i[442] = 75;
data->A->i[443] = 79;
data->A->i[444] = 80;
data->A->i[445] = 81;
data->A->i[446] = 86;
data->A->i[447] = 88;
data->A->i[448] = 90;
data->A->i[449] = 92;
data->A->i[450] = 96;
data->A->i[451] = 98;
data->A->i[452] = 0;
data->A->i[453] = 1;
data->A->i[454] = 4;
data->A->i[455] = 5;
data->A->i[456] = 6;
data->A->i[457] = 8;
data->A->i[458] = 12;
data->A->i[459] = 13;
data->A->i[460] = 17;
data->A->i[461] = 19;
data->A->i[462] = 20;
data->A->i[463] = 22;
data->A->i[464] = 25;
data->A->i[465] = 26;
data->A->i[466] = 27;
data->A->i[467] = 29;
data->A->i[468] = 30;
data->A->i[469] = 32;
data->A->i[470] = 35;
data->A->i[471] = 38;
data->A->i[472] = 41;
data->A->i[473] = 42;
data->A->i[474] = 45;
data->A->i[475] = 46;
data->A->i[476] = 49;
data->A->i[477] = 50;
data->A->i[478] = 51;
data->A->i[479] = 52;
data->A->i[480] = 53;
data->A->i[481] = 54;
data->A->i[482] = 55;
data->A->i[483] = 57;
data->A->i[484] = 59;
data->A->i[485] = 61;
data->A->i[486] = 63;
data->A->i[487] = 68;
data->A->i[488] = 69;
data->A->i[489] = 71;
data->A->i[490] = 77;
data->A->i[491] = 85;
data->A->i[492] = 87;
data->A->i[493] = 88;
data->A->i[494] = 91;
data->A->i[495] = 93;
data->A->i[496] = 94;
data->A->i[497] = 96;
data->A->i[498] = 98;
data->A->i[499] = 99;
data->A->i[500] = 0;
data->A->i[501] = 100;
data->A->i[502] = 1;
data->A->i[503] = 101;
data->A->i[504] = 2;
data->A->i[505] = 102;
data->A->i[506] = 3;
data->A->i[507] = 103;
data->A->i[508] = 4;
data->A->i[509] = 104;
data->A->i[510] = 5;
data->A->i[511] = 105;
data->A->i[512] = 6;
data->A->i[513] = 106;
data->A->i[514] = 7;
data->A->i[515] = 107;
data->A->i[516] = 8;
data->A->i[517] = 108;
data->A->i[518] = 9;
data->A->i[519] = 109;
data->A->i[520] = 10;
data->A->i[521] = 110;
data->A->i[522] = 11;
data->A->i[523] = 111;
data->A->i[524] = 12;
data->A->i[525] = 112;
data->A->i[526] = 13;
data->A->i[527] = 113;
data->A->i[528] = 14;
data->A->i[529] = 114;
data->A->i[530] = 15;
data->A->i[531] = 115;
data->A->i[532] = 16;
data->A->i[533] = 116;
data->A->i[534] = 17;
data->A->i[535] = 117;
data->A->i[536] = 18;
data->A->i[537] = 118;
data->A->i[538] = 19;
data->A->i[539] = 119;
data->A->i[540] = 20;
data->A->i[541] = 120;
data->A->i[542] = 21;
data->A->i[543] = 121;
data->A->i[544] = 22;
data->A->i[545] = 122;
data->A->i[546] = 23;
data->A->i[547] = 123;
data->A->i[548] = 24;
data->A->i[549] = 124;
data->A->i[550] = 25;
data->A->i[551] = 125;
data->A->i[552] = 26;
data->A->i[553] = 126;
data->A->i[554] = 27;
data->A->i[555] = 127;
data->A->i[556] = 28;
data->A->i[557] = 128;
data->A->i[558] = 29;
data->A->i[559] = 129;
data->A->i[560] = 30;
data->A->i[561] = 130;
data->A->i[562] = 31;
data->A->i[563] = 131;
data->A->i[564] = 32;
data->A->i[565] = 132;
data->A->i[566] = 33;
data->A->i[567] = 133;
data->A->i[568] = 34;
data->A->i[569] = 134;
data->A->i[570] = 35;
data->A->i[571] = 135;
data->A->i[572] = 36;
data->A->i[573] = 136;
data->A->i[574] = 37;
data->A->i[575] = 137;
data->A->i[576] = 38;
data->A->i[577] = 138;
data->A->i[578] = 39;
data->A->i[579] = 139;
data->A->i[580] = 40;
data->A->i[581] = 140;
data->A->i[582] = 41;
data->A->i[583] = 141;
data->A->i[584] = 42;
data->A->i[585] = 142;
data->A->i[586] = 43;
data->A->i[587] = 143;
data->A->i[588] = 44;
data->A->i[589] = 144;
data->A->i[590] = 45;
data->A->i[591] = 145;
data->A->i[592] = 46;
data->A->i[593] = 146;
data->A->i[594] = 47;
data->A->i[595] = 147;
data->A->i[596] = 48;
data->A->i[597] = 148;
data->A->i[598] = 49;
data->A->i[599] = 149;
data->A->i[600] = 50;
data->A->i[601] = 150;
data->A->i[602] = 51;
data->A->i[603] = 151;
data->A->i[604] = 52;
data->A->i[605] = 152;
data->A->i[606] = 53;
data->A->i[607] = 153;
data->A->i[608] = 54;
data->A->i[609] = 154;
data->A->i[610] = 55;
data->A->i[611] = 155;
data->A->i[612] = 56;
data->A->i[613] = 156;
data->A->i[614] = 57;
data->A->i[615] = 157;
data->A->i[616] = 58;
data->A->i[617] = 158;
data->A->i[618] = 59;
data->A->i[619] = 159;
data->A->i[620] = 60;
data->A->i[621] = 160;
data->A->i[622] = 61;
data->A->i[623] = 161;
data->A->i[624] = 62;
data->A->i[625] = 162;
data->A->i[626] = 63;
data->A->i[627] = 163;
data->A->i[628] = 64;
data->A->i[629] = 164;
data->A->i[630] = 65;
data->A->i[631] = 165;
data->A->i[632] = 66;
data->A->i[633] = 166;
data->A->i[634] = 67;
data->A->i[635] = 167;
data->A->i[636] = 68;
data->A->i[637] = 168;
data->A->i[638] = 69;
data->A->i[639] = 169;
data->A->i[640] = 70;
data->A->i[641] = 170;
data->A->i[642] = 71;
data->A->i[643] = 171;
data->A->i[644] = 72;
data->A->i[645] = 172;
data->A->i[646] = 73;
data->A->i[647] = 173;
data->A->i[648] = 74;
data->A->i[649] = 174;
data->A->i[650] = 75;
data->A->i[651] = 175;
data->A->i[652] = 76;
data->A->i[653] = 176;
data->A->i[654] = 77;
data->A->i[655] = 177;
data->A->i[656] = 78;
data->A->i[657] = 178;
data->A->i[658] = 79;
data->A->i[659] = 179;
data->A->i[660] = 80;
data->A->i[661] = 180;
data->A->i[662] = 81;
data->A->i[663] = 181;
data->A->i[664] = 82;
data->A->i[665] = 182;
data->A->i[666] = 83;
data->A->i[667] = 183;
data->A->i[668] = 84;
data->A->i[669] = 184;
data->A->i[670] = 85;
data->A->i[671] = 185;
data->A->i[672] = 86;
data->A->i[673] = 186;
data->A->i[674] = 87;
data->A->i[675] = 187;
data->A->i[676] = 88;
data->A->i[677] = 188;
data->A->i[678] = 89;
data->A->i[679] = 189;
data->A->i[680] = 90;
data->A->i[681] = 190;
data->A->i[682] = 91;
data->A->i[683] = 191;
data->A->i[684] = 92;
data->A->i[685] = 192;
data->A->i[686] = 93;
data->A->i[687] = 193;
data->A->i[688] = 94;
data->A->i[689] = 194;
data->A->i[690] = 95;
data->A->i[691] = 195;
data->A->i[692] = 96;
data->A->i[693] = 196;
data->A->i[694] = 97;
data->A->i[695] = 197;
data->A->i[696] = 98;
data->A->i[697] = 198;
data->A->i[698] = 99;
data->A->i[699] = 199;
data->A->p = (int*) malloc((110 + 1) * sizeof(int));
data->A->p[0] = 0;
data->A->p[1] = 46;
data->A->p[2] = 94;
data->A->p[3] = 153;
data->A->p[4] = 203;
data->A->p[5] = 252;
data->A->p[6] = 304;
data->A->p[7] = 352;
data->A->p[8] = 401;
data->A->p[9] = 452;
data->A->p[10] = 500;
data->A->p[11] = 502;
data->A->p[12] = 504;
data->A->p[13] = 506;
data->A->p[14] = 508;
data->A->p[15] = 510;
data->A->p[16] = 512;
data->A->p[17] = 514;
data->A->p[18] = 516;
data->A->p[19] = 518;
data->A->p[20] = 520;
data->A->p[21] = 522;
data->A->p[22] = 524;
data->A->p[23] = 526;
data->A->p[24] = 528;
data->A->p[25] = 530;
data->A->p[26] = 532;
data->A->p[27] = 534;
data->A->p[28] = 536;
data->A->p[29] = 538;
data->A->p[30] = 540;
data->A->p[31] = 542;
data->A->p[32] = 544;
data->A->p[33] = 546;
data->A->p[34] = 548;
data->A->p[35] = 550;
data->A->p[36] = 552;
data->A->p[37] = 554;
data->A->p[38] = 556;
data->A->p[39] = 558;
data->A->p[40] = 560;
data->A->p[41] = 562;
data->A->p[42] = 564;
data->A->p[43] = 566;
data->A->p[44] = 568;
data->A->p[45] = 570;
data->A->p[46] = 572;
data->A->p[47] = 574;
data->A->p[48] = 576;
data->A->p[49] = 578;
data->A->p[50] = 580;
data->A->p[51] = 582;
data->A->p[52] = 584;
data->A->p[53] = 586;
data->A->p[54] = 588;
data->A->p[55] = 590;
data->A->p[56] = 592;
data->A->p[57] = 594;
data->A->p[58] = 596;
data->A->p[59] = 598;
data->A->p[60] = 600;
data->A->p[61] = 602;
data->A->p[62] = 604;
data->A->p[63] = 606;
data->A->p[64] = 608;
data->A->p[65] = 610;
data->A->p[66] = 612;
data->A->p[67] = 614;
data->A->p[68] = 616;
data->A->p[69] = 618;
data->A->p[70] = 620;
data->A->p[71] = 622;
data->A->p[72] = 624;
data->A->p[73] = 626;
data->A->p[74] = 628;
data->A->p[75] = 630;
data->A->p[76] = 632;
data->A->p[77] = 634;
data->A->p[78] = 636;
data->A->p[79] = 638;
data->A->p[80] = 640;
data->A->p[81] = 642;
data->A->p[82] = 644;
data->A->p[83] = 646;
data->A->p[84] = 648;
data->A->p[85] = 650;
data->A->p[86] = 652;
data->A->p[87] = 654;
data->A->p[88] = 656;
data->A->p[89] = 658;
data->A->p[90] = 660;
data->A->p[91] = 662;
data->A->p[92] = 664;
data->A->p[93] = 666;
data->A->p[94] = 668;
data->A->p[95] = 670;
data->A->p[96] = 672;
data->A->p[97] = 674;
data->A->p[98] = 676;
data->A->p[99] = 678;
data->A->p[100] = 680;
data->A->p[101] = 682;
data->A->p[102] = 684;
data->A->p[103] = 686;
data->A->p[104] = 688;
data->A->p[105] = 690;
data->A->p[106] = 692;
data->A->p[107] = 694;
data->A->p[108] = 696;
data->A->p[109] = 698;
data->A->p[110] = 700;


// Matrix P
//---------
data->P = (csc*) malloc(sizeof(csc));
data->P->m = 110;
data->P->n = 110;
data->P->nz = -1;
data->P->nzmax = 10;
data->P->x = (float*) malloc(10 * sizeof(float));
data->P->x[0] = 1.00000000000000000000;
data->P->x[1] = 1.00000000000000000000;
data->P->x[2] = 1.00000000000000000000;
data->P->x[3] = 1.00000000000000000000;
data->P->x[4] = 1.00000000000000000000;
data->P->x[5] = 1.00000000000000000000;
data->P->x[6] = 1.00000000000000000000;
data->P->x[7] = 1.00000000000000000000;
data->P->x[8] = 1.00000000000000000000;
data->P->x[9] = 1.00000000000000000000;
data->P->i = (int*) malloc(10 * sizeof(int));
data->P->i[0] = 0;
data->P->i[1] = 1;
data->P->i[2] = 2;
data->P->i[3] = 3;
data->P->i[4] = 4;
data->P->i[5] = 5;
data->P->i[6] = 6;
data->P->i[7] = 7;
data->P->i[8] = 8;
data->P->i[9] = 9;
data->P->p = (int*) malloc((110 + 1) * sizeof(int));
data->P->p[0] = 0;
data->P->p[1] = 1;
data->P->p[2] = 2;
data->P->p[3] = 3;
data->P->p[4] = 4;
data->P->p[5] = 5;
data->P->p[6] = 6;
data->P->p[7] = 7;
data->P->p[8] = 8;
data->P->p[9] = 9;
data->P->p[10] = 10;
data->P->p[11] = 10;
data->P->p[12] = 10;
data->P->p[13] = 10;
data->P->p[14] = 10;
data->P->p[15] = 10;
data->P->p[16] = 10;
data->P->p[17] = 10;
data->P->p[18] = 10;
data->P->p[19] = 10;
data->P->p[20] = 10;
data->P->p[21] = 10;
data->P->p[22] = 10;
data->P->p[23] = 10;
data->P->p[24] = 10;
data->P->p[25] = 10;
data->P->p[26] = 10;
data->P->p[27] = 10;
data->P->p[28] = 10;
data->P->p[29] = 10;
data->P->p[30] = 10;
data->P->p[31] = 10;
data->P->p[32] = 10;
data->P->p[33] = 10;
data->P->p[34] = 10;
data->P->p[35] = 10;
data->P->p[36] = 10;
data->P->p[37] = 10;
data->P->p[38] = 10;
data->P->p[39] = 10;
data->P->p[40] = 10;
data->P->p[41] = 10;
data->P->p[42] = 10;
data->P->p[43] = 10;
data->P->p[44] = 10;
data->P->p[45] = 10;
data->P->p[46] = 10;
data->P->p[47] = 10;
data->P->p[48] = 10;
data->P->p[49] = 10;
data->P->p[50] = 10;
data->P->p[51] = 10;
data->P->p[52] = 10;
data->P->p[53] = 10;
data->P->p[54] = 10;
data->P->p[55] = 10;
data->P->p[56] = 10;
data->P->p[57] = 10;
data->P->p[58] = 10;
data->P->p[59] = 10;
data->P->p[60] = 10;
data->P->p[61] = 10;
data->P->p[62] = 10;
data->P->p[63] = 10;
data->P->p[64] = 10;
data->P->p[65] = 10;
data->P->p[66] = 10;
data->P->p[67] = 10;
data->P->p[68] = 10;
data->P->p[69] = 10;
data->P->p[70] = 10;
data->P->p[71] = 10;
data->P->p[72] = 10;
data->P->p[73] = 10;
data->P->p[74] = 10;
data->P->p[75] = 10;
data->P->p[76] = 10;
data->P->p[77] = 10;
data->P->p[78] = 10;
data->P->p[79] = 10;
data->P->p[80] = 10;
data->P->p[81] = 10;
data->P->p[82] = 10;
data->P->p[83] = 10;
data->P->p[84] = 10;
data->P->p[85] = 10;
data->P->p[86] = 10;
data->P->p[87] = 10;
data->P->p[88] = 10;
data->P->p[89] = 10;
data->P->p[90] = 10;
data->P->p[91] = 10;
data->P->p[92] = 10;
data->P->p[93] = 10;
data->P->p[94] = 10;
data->P->p[95] = 10;
data->P->p[96] = 10;
data->P->p[97] = 10;
data->P->p[98] = 10;
data->P->p[99] = 10;
data->P->p[100] = 10;
data->P->p[101] = 10;
data->P->p[102] = 10;
data->P->p[103] = 10;
data->P->p[104] = 10;
data->P->p[105] = 10;
data->P->p[106] = 10;
data->P->p[107] = 10;
data->P->p[108] = 10;
data->P->p[109] = 10;
data->P->p[110] = 10;

return data;

}

/* function to clean problem data structure */
void clean_problem(qpData * data){

// Clean vectors
free(data->l);
free(data->u);
free(data->q);

//Clean Matrices
free(data->A->x);
free(data->A->i);
free(data->A->p);
free(data->A);
free(data->P->x);
free(data->P->i);
free(data->P->p);
free(data->P);

free(data);

}

#endif
